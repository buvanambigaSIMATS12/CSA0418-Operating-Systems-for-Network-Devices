#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>

#define BUFFER_SIZE 1024

int main(int argc, char *argv[]) {
    int fd_src, fd_dest;
    ssize_t bytes_read;
    char buffer[BUFFER_SIZE];
    
    // Check command line arguments
    if (argc != 3) {
        fprintf(stderr, "Usage: %s <source_file> <destination_file>\n", argv[0]);
        exit(EXIT_FAILURE);
    }
    
    // Open source file
    fd_src = open(argv[1], O_RDONLY);
    if (fd_src == -1) {
        perror("open source failed");
        exit(EXIT_FAILURE);
    }
    
    // Open destination file with proper permissions
    fd_dest = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
    if (fd_dest == -1) {
        perror("open destination failed");
        close(fd_src);
        exit(EXIT_FAILURE);
    }
    
    // Copy content
    while ((bytes_read = read(fd_src, buffer, BUFFER_SIZE)) > 0) {
        if (write(fd_dest, buffer, bytes_read) != bytes_read) {
            perror("write failed");
            close(fd_src);
            close(fd_dest);
            exit(EXIT_FAILURE);
        }
    }
    
    // Check for read error
    if (bytes_read == -1) {
        perror("read failed");
        close(fd_src);
        close(fd_dest);
        exit(EXIT_FAILURE);
    }
    
    // Close files
    if (close(fd_src) == -1) {
        perror("close source failed");
    }
    
    if (close(fd_dest) == -1) {
        perror("close destination failed");
    }
    
    printf("Successfully copied %s to %s\n", argv[1], argv[2]);
    return EXIT_SUCCESS;
}
