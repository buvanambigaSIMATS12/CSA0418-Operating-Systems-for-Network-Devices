#include <stdio.h>

struct Process {
    int id, at, bt, ct, wt, tat, completed;
};

int main() {
    int n, time = 0, completed = 0, i;
    struct Process p[10];

    printf("Enter number of processes: ");
    scanf("%d", &n);

    // Input processes
    for (i = 0; i < n; i++) {
        p[i].id = i + 1;
        printf("Process %d Arrival Time and Burst Time: ", i + 1);
        scanf("%d %d", &p[i].at, &p[i].bt);
        p[i].completed = 0;
    }

    while (completed != n) {
        int idx = -1, min_bt = 9999;

        for (i = 0; i < n; i++) {
            if (p[i].at <= time && p[i].completed == 0 && p[i].bt < min_bt) {
                min_bt = p[i].bt;
                idx = i;
            }
        }

        if (idx != -1) {
            time += p[idx].bt;
            p[idx].ct = time;
            p[idx].tat = p[idx].ct - p[idx].at;
            p[idx].wt = p[idx].tat - p[idx].bt;
            p[idx].completed = 1;
            completed++;
        } else {
            time++; // Idle time
        }
    }

    printf("\nPID\tAT\tBT\tCT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n",
               p[i].id, p[i].at, p[i].bt, p[i].ct, p[i].tat, p[i].wt);
    }

    return 0;
}
