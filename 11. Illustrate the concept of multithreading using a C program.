#include <stdio.h>
#include <pthread.h>
#include <unistd.h>

// Function executed by thread 1
void* print_numbers(void* arg) {
    for (int i = 1; i <= 5; i++) {
        printf("Thread 1: %d\n", i);
        sleep(1);  // Simulate work
    }
    return NULL;
}

// Function executed by thread 2
void* print_letters(void* arg) {
    for (char c = 'A'; c <= 'E'; c++) {
        printf("Thread 2: %c\n", c);
        sleep(1);  // Simulate work
    }
    return NULL;
}

int main() {
    pthread_t thread1, thread2;

    // Create two threads
    pthread_create(&thread1, NULL, print_numbers, NULL);
    pthread_create(&thread2, NULL, print_letters, NULL);

    // Wait for both threads to finish
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);

    printf("Both threads finished execution.\n");
    return 0;
}
